replicaCount: 1

image:
  repository: ghcr.io/intrinsec/s3proxy
  pullPolicy: Always
  # tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Can add "--no-tls" if you don't want TLS
# By default, listenning TLS with files /etc/s3proxy/certs/s3proxy.crt & /etc/s3proxy/certs/s3proxy.key
args: ["--level=-4"]

cert: # From CertManager CRD
  enable: false
  issuerRefKind: ClusterIssuer
  # issuerRefName: internal-company-com
  # commonName: "*.s3proxy.internal.company.com"

config:
  host: s3.us-east-1.amazonaws.com
  # throttling: 5
  # accessKey: CHANGEME
  # secretKey: CHANGEME
  # encryptKey: CHANGEME
valsSecret: {}
#   accessKey: ref+vault://s3proxy/secrets/access-key
#   secretKey: ref+vault://s3proxy/secrets/secret-key
#   encryptKey: ref+vault://s3proxy/secrets/encrypt-key

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 4433

ingress:
  enabled: false

resources:
  limits:
    cpu: 500m
    memory: 256Mi
  requests:
    cpu: 250m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /healthz  # Liveness endpoint
    port: 4433
    scheme: HTTPS
readinessProbe:
  httpGet:
    path: /readyz  # Readiness endpoint
    port: 4433
    scheme: HTTPS

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 70

# Additional volumes on the output Deployment definition.
extraVolumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
extraVolumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
